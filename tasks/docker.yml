---

- name: Ensure old versions of Docker are not installed.
  package:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-common
    - docker-engine
    - docker-selinux

- name: install docker dependencies
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=latest"
  with_items:
    - device-mapper-persistent-data
    - lvm2
    - yum-utils

- name: Add Docker GPG key.
  rpm_key:
    key: https://download.docker.com/linux/centos/gpg
    state: present

- name: Add Docker repository.
  get_url:
    url: "{{ docker_yum_repo_url }}"
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    owner: root
    group: root
    mode: 0644

- name: create rsyslog.d
  file:
    dest: /etc/rsyslog.d
    state: directory

- name: create docker entry for syslogd
  copy:
    dest: /etc/rsyslog.d/10-docker.conf
    content: |
      # Docker logging
      :syslogtag, isequal, "docker:"  /var/log/docker/docker.log
      & ~
  notify:
    - docker-rsyslog restart

- name: copy docker logrotate configurations
  copy:
    src: "docker.logrotate"
    dest: "/etc/logrotate.d/docker"
    mode: 0644
    owner: root
    group: root

- name: create docker log archive
  file:
    path: "/var/log/docker/archive"
    mode: 0755
    state: directory

- name: create directory for systemd drop-ins
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755

- name: systemd drop-in for options
  template:
    src:  "{{ item }}.j2"
    dest: "/etc/systemd/system/docker.service.d/{{ item }}"
  with_items:
    - 10-options.conf
    - 12-network-options.conf
  notify:
    - docker restart

- name: systemd drop-in for ExecStart
  copy:
    src: ExecStart.conf
    dest: /etc/systemd/system/docker.service.d/20-ExecStart.conf
  notify:
    - docker restart

- name: install docker packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - rsyslog
    - "{{ docker_package }}"
    - "container-selinux"

- name: ensure docker config dir exists
  file:
    path: /root/.docker
    state: directory

- name: setup private docker registry credentials
  when: docker_registries is defined and docker_registries  != ""
  template:
    src: config.json.j2
    dest: /root/.docker/config.json
  register: docker_registry_credentials

- name: systemd drop-in for storage options
  register: docker_storage_options
  template:
    src:  "{{ item }}.j2"
    dest: "/etc/systemd/system/docker.service.d/{{ item }}"
  with_items:
    - 14-storage-options.conf
  notify:
    - docker restart

- include_tasks: lvm.yml
  when: (lvm_physical_device is defined) and (lvm_physical_device | trim != '')

- name: create the docker ferm configuration
  template: src=templates/1003-docker.conf.j2 dest=/etc/ferm/ferm.d/1003-docker.conf owner=root group=root
  notify:
    - ferm restart
    - docker restart

- name: enable docker
  service:
    name: docker
    enabled: yes
  notify:
    - ferm restart
    - docker restart

- name: install docker-gc
  when: docker_gc_install is defined and docker_gc_install|bool
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - docker-gc
    - cronie

- name: create docker-gc cron job
  template: src=templates/0docker-gc-hourly.cron.j2 dest=/etc/cron.hourly/0docker-gc-hourly.cron owner=root group=root mode=755
  when: docker_gc_install is defined and docker_gc_install|bool
